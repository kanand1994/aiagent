version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: it-automation-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_PATH=/app/data/it_automation.db
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - backend_data:/app/data
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - it-automation-network

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3001
        - REACT_APP_WS_URL=ws://localhost:3001
    container_name: it-automation-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - it-automation-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: it-automation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - it-automation-network

  # Redis for Session Management (Optional)
  redis:
    image: redis:7-alpine
    container_name: it-automation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    networks:
      - it-automation-network

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: it-automation-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - it-automation-network

  # Grafana for Dashboards (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: it-automation-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - it-automation-network

volumes:
  backend_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  it-automation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Environment Variables Template
# Create a .env file with these variables:
#
# JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
# REDIS_PASSWORD=your-redis-password
# GRAFANA_PASSWORD=your-grafana-admin-password
# DATABASE_ENCRYPTION_KEY=your-database-encryption-key
#
# SSL Configuration (if using HTTPS):
# SSL_CERT_PATH=/path/to/your/certificate.crt
# SSL_KEY_PATH=/path/to/your/private.key
#
# Email Configuration (for notifications):
# SMTP_HOST=smtp.yourcompany.com
# SMTP_PORT=587
# SMTP_USER=notifications@yourcompany.com
# SMTP_PASS=your-smtp-password
#
# LDAP Configuration (if using LDAP authentication):
# LDAP_URL=ldap://your-ldap-server.com
# LDAP_BIND_DN=cn=admin,dc=yourcompany,dc=com
# LDAP_BIND_PASSWORD=your-ldap-password
# LDAP_SEARCH_BASE=dc=yourcompany,dc=com